<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithmic on </title>
    <link>/tags/algorithmic/</link>
    <description>Recent content in Algorithmic on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>cipherchallenge@um6p.ma (Cipher Challenge 2025 Cryptography Edition)</managingEditor>
    <webMaster>cipherchallenge@um6p.ma (Cipher Challenge 2025 Cryptography Edition)</webMaster>
    <lastBuildDate>Mon, 03 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/algorithmic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Divide and conquer! 💪</title>
      <link>/challenges/multiplication-complexity/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate><author>cipherchallenge@um6p.ma (Cipher Challenge 2025 Cryptography Edition)</author>
      <guid>/challenges/multiplication-complexity/</guid>
      <description>&lt;p&gt;The time complexity describes the amount of computer time it takes to run an algorithm. It is estimated by counting the number of elementary operations performed by the algorithm. Since an algorithm&amp;rsquo;s running time may vary among different inputs of the same size, one commonly considers the worst-case time. Algorithmic complexities are classified according to the type of function appearing in the big O notation. Here are some examples:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;em&gt;Name&lt;/em&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;em&gt;Time complexity&lt;/em&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Constant time&lt;/td&gt;&#xA;          &lt;td&gt;$\mathcal{O}(1)       $&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Logarithmic time&lt;/td&gt;&#xA;          &lt;td&gt;$\mathcal{O}(\log n)  $&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Linear time&lt;/td&gt;&#xA;          &lt;td&gt;$\mathcal{O}(n)       $&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Linearithmic time&lt;/td&gt;&#xA;          &lt;td&gt;$\mathcal{O}(n \log n)$&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Quadratic time&lt;/td&gt;&#xA;          &lt;td&gt;$\mathcal{O}(n^2)     $&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Polynomial time&lt;/td&gt;&#xA;          &lt;td&gt;$2^{\mathcal{O}(\log n)} = poly(n)$&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Exponential time&lt;/td&gt;&#xA;          &lt;td&gt;$2^{poly(n)}$&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;multiplication-algorithms&#34;&gt;Multiplication algorithms&lt;/h2&gt;&#xA;&lt;h3 id=&#34;schoolbook-multiplication&#34;&gt;Schoolbook multiplication&lt;/h3&gt;&#xA;&lt;p&gt;Consider this example $102 \times 257$:&lt;/p&gt;</description>
    </item>
    <item>
      <title>One step at a time! 🪜</title>
      <link>/challenges/scalar-multiplication-complexity/</link>
      <pubDate>Sun, 02 Mar 2025 00:00:00 +0000</pubDate><author>cipherchallenge@um6p.ma (Cipher Challenge 2025 Cryptography Edition)</author>
      <guid>/challenges/scalar-multiplication-complexity/</guid>
      <description>&lt;h2 id=&#34;scalar-multiplication&#34;&gt;Scalar multiplication&lt;/h2&gt;&#xA;&lt;p&gt;Let $\mathbb{G}$ be a commutative group under the addition law ($+$) and let $G&#xA;\in \mathbb{G}$ be its generator.  The group has an order $p$. We define a&#xA;scalar multiplication $k \cdot G$ as $\underbrace{G+&amp;hellip;+G}_\text{$k$~times}$.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Consider $105 \cdot G$. How many additions does it involve?&lt;/li&gt;&#xA;&lt;li&gt;Now consider the binary decomposition of $105 = 2^6 + 2^5 + 2^3 + 2^0$. It can be written as&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;$105 = ((((((((((1 · 2 + 1) · 2) + 0) · 2) + 1) · 2) + 0) · 2) + 0) · 2) + 1$.&#xA;Given that a doubling (multiplication by 2) has the same cost as an addition, how many additions $105 \cdot G$ involves?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
